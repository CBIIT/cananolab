<?xml version="1.0"?>

<!-- Ant script for creating self-extracting AntInstaller for CaNanoLab -->
<!-- To run, type ant from the command line -->
<project name="caarrray-local-installer" default="run" basedir="../../output">

	<property name="installer.basedir" value="${basedir}/../tools/installer" />
	<property name="target.dir" value="${installer.basedir}/target" />
	<property name="tools.dir" value="${installer.basedir}/tools" />
	<property name="installer.dist.dir" value="${target.dir}/dist" />
	<property name="installer.dist.dir.temp" value="${installer.dist.dir}/temp" />
	<property name="installer.build.dir" value="${target.dir}/build" />
	<property name="installer.cofig.dir" value="${installer.basedir}/config" />
	<property name="installer.lib.dir" value="${installer.basedir}/lib" />
	<property name="installer.ext.dir" value="${installer.basedir}/ext" />
	<property name="installer.test.dir" value="${installer.basedir}/test" />
	<property name="lib.dir" location="${basedir}/../lib" />
	<property name="antcontrib.jar" value="ant-contrib-1.0b3.jar" />
	<property name="application.name" value="pmd-tmp" />

	<available file="${lib.dir}/${antcontrib.jar}" property="antcontrib.jar.present"/>

	<!-- This file should either not exist or contain a property that points to a valid ./antlib${ant.lib.version} directory -->
	<property file="${installer.basedir}/version.properties" />

	<!-- used to configure the updater build -->
	<property file="${installer.basedir}/installer.properties" />

	<!-- used to configure the updater build -->
	<property file="${basedir}/../local.properties" />
	<property file="${basedir}/../default.properties" />

	<property name="build.dir" location="${basedir}/build" />
	<property name="build.classes.dir" location="${build.dir}/classes" />
	<property name="build.deploy.dir" location="${build.dir}/deploy" />
	<property name="cananolab.war.location" location="${basedir}/war" />
	<property name="jboss.mysqlconfig.location" location="${basedir}/../conf" />
	<property name="database.dir" location="${basedir}/../db/1.2.1" />
	<property name="docs.dir" location="${installer.basedir}/docs" />
	<property name="xyz" value=""/>
	
	<path id="project.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${installer.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="_set-version" if="antlib.missing" depends="_check-version">
		<property name="ant.lib.version" value="" />
	</target>

	<target name="_check-version">
		<fail unless="antcontrib.jar.present" message="${antcontrib.jar} is not present in the ${lib.dir}" />
		<condition property="antlib.missing">
			<not>
				<available file="antlib${ant.lib.version}" />
			</not>
		</condition>
	</target>

	<target name="selfextract" depends="clean, _set-version, build, prepare">
		<echo message="Building caNanoLab-installer.jar..." />
		<mkdir dir="${target.dir}" />
		<taskdef name="installer" classname="org.tp23.antinstaller.taskdefs.Installer" classpathref="project.classpath" />

		<echo message="${installer.basedir}" />

		<installer file="${installer.dist.dir}/${installer.file.name}" compress="true" extractType="SelfExtractor" installConfig="${installer.cofig.dir}/${installer.installConfig.name}" buildFile="${installer.cofig.dir}/${installer.buildFile.name}" antInstallLib="${installer.basedir}/lib" antLib="${installer.basedir}/antlib${ant.lib.version}" validateConfig="true" failOnError="true" icons="eclipse" duplicate="preserve">

			<fileset dir="${installer.dist.dir}" includes="installpack.zip" description="caNanoLab artifacts. Used by installer's build script" />
			<fileset dir="${installer.build.dir}" includes="resources/*" description="Used by installer antinstall-config.xml" />
			<zipgroupfileset dir="${installer.basedir}/antlib${ant.lib.version}" includes="*.jar" excludes="ant.jar, ant-launcher.jar" description="Used by installers build script" />
			<zipgroupfileset dir="${lib.dir}" includes="${antcontrib.jar}" description="Used by installers build script" />
			<zipgroupfileset dir="${installer.basedir}/ext" includes="jaxen-1.1.1.jar, xmlconfig.jar, jdom.jar" description="Used by installers build script to perform XML file manipulation w/in Ant (levent gurses)" />
		</installer>
	</target>

	<target name="clean">
		<echo message="*** *** Cleaning caNanoLab artifacts *** *** " />
		<echo message="*** ***" />
		<delete dir="${installer.dist.dir}" />
		<delete dir="${installer.build.dir}" />
		<delete file="${installer.basedir}/artifacts/installpack.zip" failonerror="false" />
		<delete file="${installer.basedir}/artifacts/caarray2-installer.jar" failonerror="false" />
	</target>
	
	<target name="configurejbossloginConfig">
		<echo message="Configuring cananolab-ApplicationSecurityConfig..." />
		<taskdef name="xmlconfig" classname="com.xmlconfig.anttask.XmlConfig" classpathref="project.classpath" />
		
		
			<xmlconfig in="C:\cananolab-app/jboss-4.0.5.GA/server/default/conf/login-config.xml" verbose="false">			
				<read path="//policy/application-policy[9]/@name" property="xyz"/>
			</xmlconfig>
			
		<echo message="${xyz}"/>
		<antcall target="create-caNanoLab" />

		
		<property name="abc" value="false"/>
		<xmlconfig in="C:\cananolab-app/jboss-4.0.5.GA/server/default/conf/login-config.xml" verbose="false">			
			<read path="//policy/application-policy[10]/@name" property="abc"/>
		</xmlconfig>
		<echo message="${abc}"/>
		
		<antcall target="create-caNanoLab-upt" />
	
	</target>
	
	<target name="create-caNanoLab" >
	<echo message="AGAIN ${xyz}"/>
		<xmlconfig in="C:\cananolab-app/jboss-4.0.5.GA/server/default/conf/login-config.xml" verbose="false">				
			<insert name="application-policy" type="element" path="//policy" />
				<insert name="name" value="caNanoLab" type="attribute" path="//policy/application-policy[9]" />
				<insert name="authentication"  type="element" path="//policy/application-policy[9]" />
					<insert name="login-module"  type="element" path="//policy/application-policy[9]/authentication" />
						<insert name="code" value="gov.nih.nci.security.authentication.loginmodules.EncryptedRDBMSLoginModule" type="attribute" path="//policy/application-policy[9]/authentication/login-module" />
						<insert name="flag" value="required" type="attribute" path="//policy/application-policy[9]/authentication/login-module" />
						<insert name="module-option" value="com.mysql.jdbc.Driver" type="element" path="//policy/application-policy[9]/authentication/login-module" />
							<insert name="name" value="driver" type="attribute" path="//policy/application-policy[9]/authentication/login-module/module-option" />
						<insert name="module-option" value="jdbc:mysql://localhost:3307/cananolab" type="element" path="//policy/application-policy[9]/authentication/login-module" />
							<insert name="name" value="url" type="attribute" path="//policy/application-policy[9]/authentication/login-module/module-option[2]" />
						<insert name="module-option" value="cananolab_app" type="element" path="//policy/application-policy[9]/authentication/login-module" />
							<insert name="name" value="user" type="attribute" path="//policy/application-policy[9]/authentication/login-module/module-option[3]" />
						<insert name="module-option" value="go!23" type="element" path="//policy/application-policy[9]/authentication/login-module" />
							<insert name="name" value="passwd" type="attribute" path="//policy/application-policy[9]/authentication/login-module/module-option[4]" />
						<insert name="module-option" value="SELECT * FROM CSM_USER WHERE LOGIN_NAME=? and PASSWORD=?" type="element" path="//policy/application-policy[9]/authentication/login-module" />
							<insert name="name" value="query" type="attribute" path="//policy/application-policy[9]/authentication/login-module/module-option[5]" />
						<insert name="module-option" value="SHA" type="element" path="//policy/application-policy[9]/authentication/login-module" />
							<insert name="name" value="hashAlgorithm" type="attribute" path="//policy/application-policy[9]/authentication/login-module/module-option[6]" />
		</xmlconfig>
	</target>

	<target name="create-caNanoLab-upt">
	<echo message="AGAIN ${abc}"/>
		<xmlconfig in="C:\cananolab-app/jboss-4.0.5.GA/server/default/conf/login-config.xml" verbose="false">
			<insert name="application-policy" type="element" path="//policy" />
				<insert name="name" value="caNanoLab-upt" type="attribute" path="//policy/application-policy[10]" />
				<insert name="authentication"  type="element" path="//policy/application-policy[10]" />
					<insert name="login-module"  type="element" path="//policy/application-policy[10]/authentication" />
						<insert name="code" value="gov.nih.nci.security.authentication.loginmodules.EncryptedRDBMSLoginModule" type="attribute" path="//policy/application-policy[10]/authentication/login-module" />
						<insert name="flag" value="required" type="attribute" path="//policy/application-policy[10]/authentication/login-module" />
						<insert name="module-option" value="com.mysql.jdbc.Driver" type="element" path="//policy/application-policy[10]/authentication/login-module" />
							<insert name="name" value="driver" type="attribute" path="//policy/application-policy[10]/authentication/login-module/module-option" />
						<insert name="module-option" value="jdbc:mysql://localhost:3307/cananolab" type="element" path="//policy/application-policy[10]/authentication/login-module" />
							<insert name="name" value="url" type="attribute" path="//policy/application-policy[10]/authentication/login-module/module-option[2]" />
						<insert name="module-option" value="cananolab_app" type="element" path="//policy/application-policy[10]/authentication/login-module" />
							<insert name="name" value="user" type="attribute" path="//policy/application-policy[10]/authentication/login-module/module-option[3]" />
						<insert name="module-option" value="gp!23" type="element" path="//policy/application-policy[10]/authentication/login-module" />
							<insert name="name" value="passwd" type="attribute" path="//policy/application-policy[10]/authentication/login-module/module-option[4]" />
						<insert name="module-option" value="SELECT * FROM CSM_USER WHERE LOGIN_NAME=? and PASSWORD=?" type="element" path="//policy/application-policy[10]/authentication/login-module" />
							<insert name="name" value="query" type="attribute" path="//policy/application-policy[10]/authentication/login-module/module-option[5]" />
						<insert name="module-option" value="SHA" type="element" path="//policy/application-policy[10]/authentication/login-module" />
							<insert name="name" value="hashAlgorithm" type="attribute" path="//policy/application-policy[10]/authentication/login-module/module-option[6]" />							
		</xmlconfig>
	</target>		


	<target name="configurejbossloginConfig">
		<echo message="Configuring cananolab-ApplicationSecurityConfig..." />
		<taskdef name="xmlconfig" classname="com.xmlconfig.anttask.XmlConfig" classpathref="project.classpath" />
		
		
			<xmlconfig in="C:\cananolab-app/jboss-4.0.5.GA/server/default/conf/login-config.xml" verbose="false">			
				<read path="//policy/application-policy[9]/@name" property="xyz"/>
			</xmlconfig>
			
		<echo message="${xyz}"/>
		<antcall target="create-caNanoLab" />

		
		<property name="abc" value="false"/>
		<xmlconfig in="C:\cananolab-app/jboss-4.0.5.GA/server/default/conf/login-config.xml" verbose="false">			
			<read path="//policy/application-policy[10]/@name" property="abc"/>
		</xmlconfig>
		<echo message="${abc}"/>
		
		<antcall target="create-caNanoLab-upt" />
	
	</target>
		

	<target name="prepare">
		<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${lib.dir}/${antcontrib.jar}" />

		<delete dir="${installer.build.dir}/resources" />

		<mkdir dir="${installer.build.dir}/resources" />

		<loadfile property="release_notes.txt" srcfile="${docs.dir}/release_notes.txt" />

		<post to="http://txt2html.sourceforge.net/cgi-bin/txt2html.cgi" verbose="false" logfile="${installer.build.dir}/resources/release_notes.html" failonerror="true">
			<prop name="text" value="${release_notes.txt}" />
		</post>

		<available file="${installer.build.dir}/resources/release_notes.html" property="release_notes.html.not.present" />
		<fail message="Unable to have release notes translated to html using a website" unless="release_notes.html.not.present" />
		<replace file="${installer.build.dir}/resources/release_notes.html" token="txt2html" value="Caarray2 Release Notes" />
		<copy file="${installer.basedir}/LICENSE.txt" todir="${installer.build.dir}/resources" />
		<copy file="${docs.dir}/release_notes.txt" todir="${installer.build.dir}/resources" />
		<copy file="${installer.basedir}/config/images/banner_caarray.png" todir="${installer.build.dir}/resources" />
		<copy file="${installer.basedir}/config/images/banner_caarray.png" tofile="${installer.build.dir}/resources/extract-image.jpg" />
	</target>

	<target name="-configure-jboss-ds">
		<echo message="Configuring cananolab-mysql database..." />
		<taskdef name="xmlconfig" classname="com.xmlconfig.anttask.XmlConfig" classpathref="project.classpath" />
		<xmlconfig in="${installer.dist.dir.temp}/config/mysql-ds.xml" verbose="false">
			<update path="//datasources/local-tx-datasource/connection-url" value="jdbc:mysql://${database.server}:${database.port}/${database.name}" />
			<update path="//datasources/local-tx-datasource/user-name" value="${database.user}" />
			<update path="//datasources/local-tx-datasource/password" value="${database.password}" />
		</xmlconfig>
	</target>



	<target name="build">
		<echo message="Creating caNanoLab-installer.zip ..." />
		<mkdir dir="${installer.dist.dir}" />
		<delete dir="${installer.dist.dir.temp}" />
		<mkdir dir="${installer.dist.dir.temp}" />

		<!-- Copy caarray2 EAR file to temp -->
		<copy todir="${installer.dist.dir.temp}/war">
			<fileset dir="${cananolab.war.location}">
				<include name="**/caNanoLab.war" />
				<include name="**/caNanoLabSDK.war" />
				<include name="**/upt.war" />
			</fileset>
		</copy>

		<!-- Copy jars to temp -->
		<copy todir="${installer.dist.dir.temp}/jars">
			<fileset dir="${lib.dir}">
				<include name="**/mysql-connector-java-5.0.7-bin.jar" />
				<include name="**/nc2.2.jar" />
				<include name="**/xmlconfig.jar" />
				<include name="**/xml-apis.jar" />
				<include name="**/jaxen-1.1-beta-10.jar" />
			</fileset>
		</copy>
		
		<copy file="${basedir}/../conf/csm/ApplicationSecurityConfig.xml" todir="${installer.dist.dir.temp}/config" />
		<copy file="${basedir}/../conf/csm/mysql/caNanoLab.csm.hibernate.cfg.xml" todir="${installer.dist.dir.temp}/config" />
		
		<!-- Copy JBoss config file to temp -->
		<copy todir="${installer.dist.dir.temp}/config">
			<fileset dir="${jboss.mysqlconfig.location}">
				<include name="**/mysql-ds.xml" />
			</fileset>
		</copy>

		<!-- Copy Database scripts to temp -->
		<copy todir="${installer.dist.dir.temp}/database">
			<fileset dir="${database.dir}">
				<include name="**/*.sql" />
			</fileset>
		</copy>

		<!-- Copy license script to temp -->
		<copy todir="${installer.dist.dir.temp}">
			<fileset dir="${installer.basedir}">
				<include name="**/LICENSE.txt" />
			</fileset>
		</copy>

		<!-- Copy docs to temp -->
		<copy todir="${installer.dist.dir.temp}/docs">
			<fileset dir="${installer.basedir}/docs">
				<include name="**/*.txt" />
			</fileset>
		</copy>


		
		<!-- Copy property files to temp -->
		<copy file="${basedir}/../local.properties" todir="${installer.basedir}/target/dist/temp" />
		<copy file="${basedir}/../default.properties" todir="${installer.basedir}/target/dist/temp" />

		<!-- Get/Copy JBoss zip 	-->
		<mkdir dir="${installer.dist.dir.temp}/tools" />
		<available file="${tools.dir}" type="dir" property="tools.dir.present"/>
		<available file="${tools.dir}/jboss-4.0.5.GA.zip" type="file" property="local.jboss.present"/>
		<available file="${tools.dir}/mysql-noinstall-5.0.45-win32.zip" type="file" property="local.mysql.present"/>

		<antcall target="create-tools-dir" />
		<antcall target="get-jboss-bin" />
		<antcall target="get-mysql-bin" />

		<copy file="${tools.dir}/jboss-4.0.5.GA.zip" todir="${installer.dist.dir.temp}/tools" />
		<copy file="${tools.dir}/mysql-noinstall-5.0.45-win32.zip" todir="${installer.dist.dir.temp}/tools" />

		<!-- Configure JBoss MySQL datasource -->
		<antcall target="-configure-jboss-ds" />
		
		
		<zip file="${installer.dist.dir}/installpack.zip">
			<fileset dir="${installer.dist.dir.temp}">
				<include name="**/*.*" />
			</fileset>
		</zip>

	</target>

	<target name="create-tools-dir" unless="tools.dir.present">
		<delete dir="${tools.dir}" />
		<mkdir dir="${tools.dir}" />
	</target>
	
	<target name="get-jboss-bin" unless="local.jboss.present" >
		<get dest="${tools.dir}/jboss-4.0.5.GA.zip" usetimestamp="true" ignoreerrors="false" src="http://www.integratebutton.com/downloads/ncicb/jboss-4.0.5.GA.zip" />
	</target>

	<target name="get-mysql-bin" unless="local.mysql.present" >
		<get dest="${tools.dir}/mysql-noinstall-5.0.45-win32.zip" usetimestamp="true" ignoreerrors="false" src="http://mysql.mirrors.pair.com/Downloads/MySQL-5.0/mysql-noinstall-5.0.45-win32.zip" />
	</target>

	<target name="run" depends="clean, selfextract">
		<java jar="${installer.dist.dir}/${installer.file.name}" fork="true" />
	</target>

	<target name="install">
		<java jar="${installer.dist.dir}/${installer.file.name}" fork="true" />
	</target>

	<target name="test-xmlconfig">
		<path id="xmlconfig.path">
			<fileset dir="${installer.ext.dir}">
				<include name="*.jar" />
				<exclude name="jaxen-1.1-beta-10.jar" />
			</fileset>
		</path>

		<taskdef name="xmlconfig" classname="com.xmlconfig.anttask.XmlConfig" classpathref="xmlconfig.path" />

		<property name="caXAParent" value="blank" />
		<property name="caXAUrl" value="blank" />
		<property name="secXAUrl" value="blank" />
		<property name="secXAUser" value="blank" />
		<property name="secXAPassword" value="blank" />
		<xmlconfig in="${installer.test.dir}/test-xmlconfig.xml" verbose="true">
			<read path="//datasources/xa-datasource/jndi-name[text()='caarray2XAOracleDS']/.." property="caXAParent" />
			<read path="//datasources/xa-datasource/jndi-name[text()='caarray2XAOracleDS']/../xa-datasource-property[@name='URL']" property="caXAUrl" />
			<read path="//datasources/xa-datasource/jndi-name[text()='SecurityXAOracleDS']/../xa-datasource-property[@name='URL']" property="secXAUrl" />
			<read path="//datasources/xa-datasource/jndi-name[text()='SecurityXAOracleDS']/../xa-datasource-property[@name='User']" property="secXAUser" />
			<read path="//datasources/xa-datasource/jndi-name[text()='SecurityXAOracleDS']/../xa-datasource-property[@name='Password']" property="secXAPassword" />
		</xmlconfig>

		<echo message="caXAParent=${caXAParent}" />
		<echo message="caXAUrl=${caXAUrl}" />
		<echo message="secXAUrl=${secXAUrl}" />
		<echo message="secXAUser=${secXAUser}" />
		<echo message="secXAPassword=${secXAPassword}" />

		<copy file="${installer.test.dir}/orig-test-xmlconfig.xml" tofile="${installer.test.dir}/test-xmlconfig.xml.out" overwrite="true" />
		<xmlconfig in="${installer.test.dir}/test-xmlconfig.xml.out" verbose="false">
			<update path="//datasources/xa-datasource/jndi-name[text()='caarray2XAOracleDS']/../xa-datasource-property[@name='URL']" value="${caXAUrl}" />
			<update path="//datasources/xa-datasource/jndi-name[text()='SecurityXAOracleDS']/../xa-datasource-property[@name='URL']" value="${secXAUrl}" />
			<update path="//datasources/xa-datasource/jndi-name[text()='SecurityXAOracleDS']/../xa-datasource-property[@name='User']" value="${secXAUser}" />
			<update path="//datasources/xa-datasource/jndi-name[text()='SecurityXAOracleDS']/../xa-datasource-property[@name='Password']" value="${secXAPassword}" />
		</xmlconfig>
		<loadfile srcfile="${installer.test.dir}/test-xmlconfig.xml.out" property="test-xmlconfig.xml.out.filecontents" />
		<echo message="${test-xmlconfig.xml.out.filecontents}" />
	</target>
</project>
