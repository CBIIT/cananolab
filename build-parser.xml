<?xml version="1.0" encoding="utf-8" ?>
<project name="caNanoLab" default="build-parser" basedir=".">
	<property name="file.separator" value="/" />
	<property file="deploy.properties" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="conf.dir" value="${basedir}/conf" />
	<property name="webroot.dir" value="${basedir}/web" />
	<property name="webapp.lib.dir" value="${webroot.dir}/WEB-INF/lib" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="tmp.dir" value="${build.dir}/tmp" />

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement
				location="${lib.dir}/cagrid/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<target name="clean">
		<delete dir="${build.dir}" quiet="true" />
	</target>

	<target name="init-application">
		<!-- create the necessary folders -->
		<mkdir dir="${build.dir}" />
		<mkdir dir="${tmp.dir}" />
		<mkdir dir="${tmp.dir}/classes" />
		<mkdir dir="${tmp.dir}/lib" />
	</target>

	<target name="compile" depends="clean, init-application">
		<echo
			message="*****************************************************" />
		<echo message="**   Compiling Java Classes ...          		  **" />
		<echo
			message="*****************************************************" />
		<path id="cp">
			<fileset dir="${webapp.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</path>
		<javac srcdir="${src.dir}" destdir="${tmp.dir}/classes"
			debug="true">
			<exclude name="test/TestGrid.java" />
			<exclude name="gov/nih/nci/cananolab/ui/**" />
			<exclude
				name="gov/nih/nci/cananolab/service/common/GridService.java" />
			<exclude
				name="gov/nih/nci/cananolab/service/**/impl/*RemoteImpl.java" />
			<classpath refid="cp" />
		</javac>

		<!--copy properties files -->
		<copy todir="${tmp.dir}/classes"
			file="${src.dir}/log4j.properties" />

		<!--copy xml files -->
		<copy todir="${tmp.dir}/classes">
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
			</fileset>
			<fileset dir="${conf.dir}/csm">
				<include name="ApplicationSecurityConfig.xml" />
				<include name="caNanoLab.csm.hibernate.cfg.xml" />
			</fileset>
		</copy>

		<!-- copy lib files -->
		<copy todir="${tmp.dir}/lib">
			<fileset dir="${webapp.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="log4j.jar" />
			</fileset>
			<fileset dir="${conf.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="build-endnote-parser" depends="compile">
		<property file="${basedir}/deploy.properties" />
		<!-- use connection pool for SDK database connection-->
		<replaceregexp file="${tmp.dir}/classes/hibernate.cfg.xml"
			match=".*java\:\/caNanoLab.*" replace="" flags="g" />
		<!-- replace database connection info -->
		<replace file="${tmp.dir}/classes/hibernate.cfg.xml"
			token="DATABASE_HOST" value="${database.host}" />
		<replace file="${tmp.dir}/classes/hibernate.cfg.xml"
			token="DATABASE_PORT" value="${database.port}" />
		<replace file="${tmp.dir}/classes/hibernate.cfg.xml"
			token="DATABASE_USER" value="${database.user}" />
		<replace file="${tmp.dir}/classes/hibernate.cfg.xml"
			token="DATABASE_PASSWORD" value="${database.password}" />
		<replaceregexp file="${tmp.dir}/classes/hibernate.cfg.xml"
			match=".*@DB_CONNECTION_POOL_BEGIN@.*" replace="" flags="g" />
		<replaceregexp file="${tmp.dir}/classes/hibernate.cfg.xml"
			match=".*@DB_CONNECTION_POOL_END@.*" replace="" flags="g" />
		<replaceregexp file="${tmp.dir}/classes/hibernate.cfg.xml"
			match=".*java\:\/caNanoLab.*" replace="" flags="g" />

		<!-- use connection pool for CSM database connection-->
		<replace
			file="${tmp.dir}/classes/caNanoLab.csm.hibernate.cfg.xml"
			token="DATABASE_HOST" value="${database.host}" />
		<replace
			file="${tmp.dir}/classes/caNanoLab.csm.hibernate.cfg.xml"
			token="DATABASE_PORT" value="${database.port}" />
		<replace
			file="${tmp.dir}/classes/caNanoLab.csm.hibernate.cfg.xml"
			token="DATABASE_USER" value="${database.user}" />
		<replace
			file="${tmp.dir}/classes/caNanoLab.csm.hibernate.cfg.xml"
			token="DATABASE_PASSWORD" value="${database.password}" />
		<replaceregexp
			file="${tmp.dir}/classes/caNanoLab.csm.hibernate.cfg.xml"
			match=".*@DB_CONNECTION_POOL_BEGIN@.*" replace="" flags="g" />
		<replaceregexp
			file="${tmp.dir}/classes/caNanoLab.csm.hibernate.cfg.xml"
			match=".*@DB_CONNECTION_POOL_END@.*" replace="" flags="g" />
		<replaceregexp
			file="${tmp.dir}/classes/caNanoLab.csm.hibernate.cfg.xml"
			match=".*java\:caNanoLab.*" replace="" flags="g" />

		<!-- specify directory for CSM hibernate config file location -->
		<propertyregex override="true" property="tmp.dir"
			input="${tmp.dir}"
			regexp="\$HeadURL\: .*/calab/cananolab/tags/([^/]*)/.*" select="\1" />
		<replace file="${tmp.dir}/classes/ApplicationSecurityConfig.xml"
			token="JBOSS_CONF_DIR" value="C:/devel/caNanoLab/build/tmp/classes" />
	</target>

	<target name="run-connection-test" depends="build-endnote-parser">
		<path id="class.path">
			<fileset dir="${tmp.dir}/lib">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${tmp.dir}">
				<include name="**/*.xml" />
			</fileset>
			<pathelement path="${tmp.dir}/classes" />
		</path>

		<java classname="test.TestConnectionPool" fork="true">
			<classpath refid="class.path" />
			<sysproperty key="gov.nih.nci.security.configFile"
				value="C:/devel/caNanoLab/build/tmp/classes/ApplicationSecurityConfig.xml" />
		</java>

		<!-- remove tmp directory -->
		<!--
			<delete dir="${tmp.dir}" quiet="true" />
		-->
	</target>

	<!--
		<target name="run-endnote-parser" depends="build-endnote-parser">
		<path id="endnote.parser.path">
		<fileset dir="${tmp.dir}/WEB-INF/lib">
		<include name="**/*.jar" />
		</fileset>
		<fileset dir="${tmp.dir}/WEB-INF/">
		<include name="**/*.xml" />
		</fileset>
		<pathelement path="${tmp.dir}/WEB-INF/classes" />
		</path>
		
		<java classname="test.TestDB" fork="true">
		<classpath refid="endnote.parser.path" />
		</java>
		</target>
	-->
</project>