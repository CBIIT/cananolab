<!DOCTYPE form-validation PUBLIC
"-//Apache Software Foundation//DTD Commons Validator Rules Configuration 1.1.3//EN"
"http://jakarta.apache.org/commons/dtds/validator_1_1_3.dtd">

<form-validation>
	<formset>
		<form name="sampleForm">
			<field property="sampleBean.domain.name" page="1" depends="required">
				<arg position="0" key="sampleForm.sampleName" bundle="sample" />
			</field>
			<field property="sampleBean.primaryPOCBean.domain.id" page="1"
				depends="validwhen">
				<arg position="0" key="sampleForm.primaryPOC" bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((sampleBean.thePOC.domain.organization.name!=null) or
						(*this*!=null))
					</var-value>
				</var>
			</field>
			<field property="sampleBean.thePOC.domain.organization.name"
				page="2" depends="required">
				<arg position="0" key="sampleForm.organizationName" bundle="sample" />
			</field>
		</form>
		<form name="/chemicalAssociation">
			<field property="assoc.type" page="2" depends="required">
				<arg position="0" key="chemicalAssociationType" bundle="sample" />
			</field>
			<field property="assoc.attachment.bondType" page="2" depends="validwhen">
				<arg position="0" key="chemicalAssociationBondType" bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((assoc.type!='attachment') or (*this*!=null))
					</var-value>
				</var>
			</field>
			<field property="assoc.associatedElementA.entityId" page="2"
				depends="required">
				<arg position="0" key="associatedElementA" bundle="sample" />
			</field>
			<field property="assoc.associatedElementB.entityId" page="2"
				depends="required">
				<arg position="0" key="associatedElementB" bundle="sample" />
			</field>
			<field property="assoc.associatedElementA.composingElement.id"
				page="2" depends="validwhen">
				<arg position="0" key="associatedElementAComposingElement"
					bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((assoc.associatedElementA.compositionType!='Nanomaterial
						Entity')
						or (*this*!=0))
					</var-value>
				</var>
			</field>
			<field property="assoc.associatedElementB.composingElement.id"
				page="2" depends="validwhen">
				<arg position="0" key="associatedElementBComposingElement"
					bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((assoc.associatedElementA.compositionType!='Nanomaterial
						Entity')
						or (*this*!=0))
					</var-value>
				</var>
			</field>
		</form>
		<form name="/nanomaterialEntity">
			<field property="nanomaterialEntity.type" page="1" depends="required">
				<arg position="0" key="nanomaterialEntityType" bundle="sample" />
			</field>
			<field property="nanomaterialEntity.biopolymer.name" page="2"
				depends="validwhen">
				<arg position="0" key="nanomaterialEntityForm.biopolymer.name"
					bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((nanomaterialEntity.type!='biopolymer') or
						(*this*!=null))
					</var-value>
				</var>
			</field>
			<field property="nanomaterialEntity.biopolymer.type" page="1"
				depends="validwhen">
				<arg position="0" key="nanomaterialEntityForm.biopolymer.type"
					bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((nanomaterialEntity.type!='biopolymer') or
						(*this*!=null))
					</var-value>
				</var>
			</field>
			<field property="nanomaterialEntity.liposome.polymerName" page="1"
				depends="validwhen">
				<arg position="0" key="nanomaterialEntityForm.liposome.polymerName"
					bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((nanomaterialEntity.type!='liposome') or
						((nanomaterialEntity.liposome.polymerized==0) or
						(*this*!=null)))
					</var-value>
				</var>
			</field>
			<field property="nanomaterialEntity.emulsion.polymerName" page="1"
				depends="validwhen">
				<arg position="0" key="nanomaterialEntityForm.emulsion.polymerName"
					bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((nanomaterialEntity.type!='emulsion') or
						((nanomaterialEntity.emulsion.polymerized==0) or
						(*this*!=null)))
					</var-value>
				</var>
			</field>
			<field property="nanomaterialEntity.polymer.crossLinkDegree"
				page="1" depends="validwhen">
				<arg position="0" key="nanomaterialEntityForm.polymer.crossLinkDegree"
					bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						((nanomaterialEntity.type!='polymer') or
						((nanomaterialEntity.polymer.crossLinkDegree==0) or
						(*this*!=null)))
					</var-value>
				</var>
			</field>
			<field property="nanomaterialEntity.theComposingElement.domain.type"
				page="2" depends="validwhen">
				<arg position="0" key="composingElement.type" bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						(((dispatch!='saveComposingElement') and
						(dispatch!='removeComposingElement')) or
						(*this*!=null))
					</var-value>
				</var>				
			</field>
			<field property="nanomaterialEntity.theComposingElement.domain.name"
				page="2" depends="validwhen">
				<arg position="0" key="composingElement.chemicalName" bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						(((dispatch!='saveComposingElement') and
						(dispatch!='removeComposingElement')) or
						(*this*!=null))
					</var-value>
				</var>					
			</field>
			<field property="nanomaterialEntity.theFile.domainFile.type"
				page="3" depends="required">
				<arg position="0" key="file.type" bundle="sample" />
			</field>
			<field property="nanomaterialEntity.theFile.domainFile.title"
				page="3" depends="required">
				<arg position="0" key="file.title" bundle="sample" />
			</field>
		</form>
		<form name="/functionalizingEntity">
			<field property="functionalizingEntity.type" page="1" depends="required">
				<arg position="0" key="functionalizingEntity.type" bundle="sample" />
			</field>
			<field property="functionalizingEntity.name" page="1" depends="required">
				<arg position="0" key="functionalizingEntity.name" bundle="sample" />
			</field>
			<field property="functionalizingEntity.theFunction.type"
				page="2" depends="validwhen">
				<arg position="0" key="function.type" bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						(((dispatch!='saveFunction') and
						(dispatch!='removeFunction')) or
						(*this*!=null))
					</var-value>
				</var>				
			</field>
			<field property="functionalizingEntity.theFile.domainFile.type"
				page="3" depends="required">
				<arg position="0" key="file.type" bundle="sample" />
			</field>
			<field property="functionalizingEntity.theFile.domainFile.title"
				page="3" depends="required">
				<arg position="0" key="file.title" bundle="sample" />
			</field>
		</form>
		<form name="/compositionFile">
			<field property="compFile.externalUrl" page="2" depends="validwhen">
				<arg position="0" key="externalUrl" bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						(((*this*!=null) and
						(compFile.domainFile.uriExternal=="true")) or
						(compFile.domainFile.uriExternal=="false"))
					</var-value>
				</var>
			</field>
			<field property="compFile.uploadedFile" page="2" depends="validwhen">
				<arg position="0" key="uploadedFile" bundle="sample" />
				<var>
					<var-name>test</var-name>
					<var-value>
						(((compFile.domainFile.uri!=null) or
						((*this*!=null) and
						(compFile.domainFile.uriExternal=="false"))) or
						(compFile.domainFile.uriExternal=="true"))
					</var-value>
				</var>
			</field>
			<field property="compFile.domainFile.title" page="2"
				depends="required,mask">
				<arg position="0" key="file.title" bundle="sample" />
				<msg name="mask" key="file.title.invalid" />
				<var>
					<var-name>mask</var-name>
					<var-value>^[a-zA-Z0-9\-\_\s]*$</var-value>
				</var>
			</field>
			<field property="compFile.domainFile.type" page="2" depends="required">
				<arg position="0" key="file.type" bundle="sample" />
			</field>
		</form>
		<form name="characterizationForm">
			<field property="achar.characterizationType" page="2" depends="required">
				<arg position="0" key="achar.characterizationType" bundle="sample" />
			</field>
			<field property="achar.characterizationName" page="2" depends="required">
				<arg position="0" key="achar.characterizationName" bundle="sample" />
			</field>
			<!--
				<field property="achar.theExperimentConfig.domain.technique.type"
				page="2" depends="validwhen"> <arg position="0"
				key="achar.technique.type" bundle="sample"/> <var>
				<var-name>test</var-name> <var-value>
				((achar.theExperimentConfig.domain.id==null) or (*this*!=null))
				</var-value> </var> </field>
			-->
			<!--
				TODO add type <field property="achar.shape.maxDimension" page="2"
				depends="float"> <arg position="0" key="shape.maxDimension"
				bundle="sample"/> </field> <field
				property="achar.shape.minDimension" page="2" depends="float"> <arg
				position="0" key="shape.minDimension" bundle="sample"/> </field>
				<field property="achar.solubility.criticalConcentration" page="2"
				depends="float"> <arg position="0"
				key="solubility.criticalConcentrationValue" bundle="sample"/>
				</field> <field
				property="achar.solubility.criticalConcentrationUnit" page="2"
				depends="validwhen"> <arg position="0"
				key="solubility.criticalConcentrationUnit" bundle="sample"/> <var>
				<var-name>test</var-name> <var-value>
				((achar.solubility.criticalConcentration==null) or (*this*!=null))
				</var-value> </var> </field>
			-->
			<!--			<field property="labFileBean.domainFile.title" page="2"-->
			<!--				depends="required,mask"-->
			<!--				indexedListProperty="achar.derivedBioAssayDataList">-->
			<!--				<arg position="0" key="file.title" bundle="sample"/>-->
			<!--				<msg name="mask" key="file.title.invalid" />-->
			<!--				<var>-->
			<!--					<var-name>mask</var-name>-->
			<!--					<var-value>^[a-zA-Z0-9\-\_\s]*$</var-value>-->
			<!--				</var>-->
			<!--			</field>-->
			<!--			<field property="labFileBean.domainFile.type" page="2"-->
			<!--				depends="required"-->
			<!--				indexedListProperty="achar.derivedBioAssayDataList">-->
			<!--				<arg position="0" key="file.type" bundle="sample"/>-->
			<!--			</field>-->
			<!--			<field property="labFileBean.externalUrl" page="2"-->
			<!--				depends="validwhen"-->
			<!--				indexedListProperty="achar.derivedBioAssayDataList">-->
			<!--				<arg position="0" key="externalUrl"-->
			<!--					bundle="sample"/>-->
			<!--				<var>-->
			<!--					<var-name>test</var-name>-->
			<!--					<var-value>-->
			<!--						(((*this*!=null) and-->
			<!--
				(achar.derivedBioAssayDataList[].labFileBean.domainFile.uriExternal=="true"))
				or
			-->
			<!--
				(achar.derivedBioAssayDataList[].labFileBean.domainFile.uriExternal=="false"))
			-->
			<!--					</var-value>-->
			<!--				</var>-->
			<!--			</field>-->
			<!--			<field property="labFileBean.uploadedFile" page="2"-->
			<!--				depends="validwhen"-->
			<!--				indexedListProperty="achar.derivedBioAssayDataList">-->
			<!--				<arg position="0" key="uploadedFile"-->
			<!--					bundle="sample"/>-->
			<!--				<var>-->
			<!--					<var-name>test</var-name>-->
			<!--					<var-value>-->
			<!--
				(((achar.derivedBioAssayDataList[].labFileBean.domainFile.uri!=null)
				or
			-->
			<!--						 ((*this*!=null) and-->
			<!--
				(achar.derivedBioAssayDataList[].labFileBean.domainFile.uriExternal=="false")))
				or
			-->
			<!--
				(achar.derivedBioAssayDataList[].labFileBean.domainFile.uriExternal=="true"))
			-->
			<!--					</var-value>-->
			<!--				</var>-->
			<!--			</field>-->
		</form>
		<form name="searchSampleForm">
			<field property="text" page="1" depends="mask">
				<arg position="0" key="text" bundle="sample" />
				<msg name="mask" key="text.invalid" />
				<var>
					<var-name>mask</var-name>
					<var-value>^[a-zA-Z0-9\-\_\s\"']*$</var-value>
				</var>
			</field>
		</form>
	</formset>
</form-validation>
