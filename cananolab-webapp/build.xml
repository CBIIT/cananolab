<?xml version="1.0" encoding="utf-8" ?>
<project name="cananolab-webapp" default="run" basedir=".">
	<description>
	This is the build file for the caNanoLab webapp project.
	</description>

	<property file="local.properties" />
	<property file="default.properties" />
	<property file="build.properties" />
	<property name="src.dir" location="${basedir}/src" />
	<property name="webroot.dir" location="${basedir}/web" />
	<property name="build.dir" location="${basedir}/build" />
	<property name="target.dir" location="${basedir}/target" />
	<property name="lib.dir" location="${target.dir}/lib" />
	<property name="dist.dir" location="${target.dir}/dist" />

	<!-- declare again to allow overwrite by the master build file -->
	<property name="release.version" value="${release.version}" />
	<property name="file.repository.dir" value="${file.repository.dir}" />
	<property name="admin.email" value="${admin.email}" />

	<target name="pre-clean">
		<delete dir="${dist.dir}" />
	</target>

	<target name="post-clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="init">
		<!-- create the necessary folders -->
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/WEB-INF" />
		<mkdir dir="${build.dir}/WEB-INF/classes" />
		<mkdir dir="${build.dir}/WEB-INF/lib" />
		<filterset id="properties.filterset">
			<filter token="FILE_REPOSITORY_DIR" value="${file.repository.dir}" />
			<filter token="ADMIN_EMAIL" value="${admin.email}" />
		</filterset>
	</target>

	<target name="compile" depends="init">
		<!-- copy jars to lib.dir -->
		<!-- replace with ivy in the future -->
		<copy todir="${lib.dir}">
			<fileset dir="${basedir}/lib">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${webroot.dir}/WEB-INF/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>

		<echo message="*****************************************************" />
		<echo message="**   Compiling Java Classes ...          		  **" />
		<echo message="*****************************************************" />
		<path id="cp">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</path>
		<javac srcdir="${src.dir}" destdir="${build.dir}/WEB-INF/classes" debug="true">
			<classpath refid="cp" />
		</javac>

		<!--copy properties files -->
		<copy todir="${build.dir}/WEB-INF/classes">
			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
				<exclude name="caNanoLab.properties" />
			</fileset>
		</copy>

		<copy overwrite="true" tofile="${build.dir}/WEB-INF/classes/caNanoLab.properties" file="${src.dir}/caNanoLab.properties.template">
			<!-- replace tokens with values from build properties -->
			<filterset refid="properties.filterset" />
		</copy>

		<!--copy xml files -->
		<copy todir="${build.dir}/WEB-INF/classes">
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
			</fileset>
		</copy>

		<!-- copy web files and lib files -->
		<copy todir="${build.dir}">
			<fileset dir="${webroot.dir}">
				<exclude name="**/*.mex" />
				<exclude name="**/WEB-INF/classes/**" />
			</fileset>
		</copy>

		<!-- copy lib files from ${lib.dir}
		<copy todir="${build.dir}/WEB-INF/lib">
			<fileset dir="${lib.dir}">
				<include name="servlet.jar" />
				<include name="log4j.jar" />
			</fileset>
		</copy>
		-->
	</target>

	<target name="war" depends="compile">
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${lib.dir}/ant-contrib-1.0b3.jar" />
			</classpath>
		</taskdef>

		<!-- tag footer with release version and build tag -->
		<property name="build_tag" value="dev" />
		<propertyregex override="true" property="build_tag" input="${build.tag}" regexp="\$HeadURL\: .*/cananolab/tags/([^/]*)/.*" select="\1" />
		<replaceregexp file="${build.dir}/html/nciFooter.html" match="\{CANANOLAB_RELEASE_VERSION\}" replace="${release.version}" flags="g" />
		<replaceregexp file="${build.dir}/html/nciFooter.html" match="\{CANANOLAB_BUILD_TAG\}" replace="${build_tag}" flags="g" />

		<!-- package WAR file -->
		<jar destfile="${dist.dir}/caNanoLab.war" basedir="${build.dir}" />
	</target>
	<target name="run" depends="pre-clean, war, post-clean" />

	<target name="jar:helpers" depends="compile">
		<!-- caNanoLab.properties -->
		<copy overwrite="true" tofile="${build.dir}/WEB-INF/classes/caNanoLab.properties" file="${src.dir}/caNanoLab.properties.template">
			<!-- replace tokens with values from build properties -->
			<filterset refid="properties.filterset" />
		</copy>
		<!-- package jar file -->
		<jar destfile="${dist.dir}/caNanoLab-helpers.jar" basedir="${build.dir}/WEB-INF/classes" includes="**/UserBean.class, **/*Exception.class, **/AuthorizationService.class, **/*Helper.class, **/ClassUtils.class, **/StringUtils.class, **/TextMatchMode.class, **/Constants.class, **/PropertyUtils.class, caNanoLab.properties.template" excludes="**/AdvancedSampleServiceHelper.class" />
	</target>

	<target name="jar:orm">
		<!-- package jar file -->
		<jar destfile="${dist.dir}/caNanoLabSDK-orm.jar" basedir="${src.dir}" includes="**/*hbm.xml, ehcache.xml, hibernate.cfg.xml" />
	</target>
</project>
