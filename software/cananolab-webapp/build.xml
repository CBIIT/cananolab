<?xml version="1.0" encoding="utf-8" ?>
<project name="cananolab-webapp" default="dist" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant" xmlns:rsel="antlib:org.apache.tools.ant.types.resources.selectors">
	<description>
	This is the build file for the caNanoLab webapp project.
	</description>

	<property file="build.properties" />
	<property file="project.properties" />
	<property name="src.dir" location="${basedir}/src" />
	<property name="webroot.dir" location="${basedir}/web" />
	<property name="build.dir" location="${basedir}/build" />
	<property name="common.dir" location="${basedir}/../common" />
	<property name="dist.dir" location="${basedir}/target/dist" />
	<property name="common.dist.dir" location="${dist.dir}/common" />
	<!-- antcontrib task-->
	<path id="common.classpath">
		<fileset dir="${common.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="common.classpath" />

	<!-- maven ant task -->
	<path id="maven-ant-tasks.classpath" path="${common.dir}/lib/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />

	<!--set up required dependencies jars for compile time and run time thru Maven -->
	<artifact:pom id="cananolab-webapp-pom" file="pom.xml" />
	<artifact:dependencies pathId="runtime.dependency.classpath" filesetId="runtime.dependency.fileset" pomRefId="cananolab-webapp-pom" useScope="runtime" />
	<artifact:dependencies pathId="compiletime.dependency.classpath" filesetId="compiletime.dependency.fileset" pomRefId="cananolab-webapp-pom" useScope="compile" />

	<target name="clean">
		<delete dir="${dist.dir}" />
		<delete dir="${common.dist.dir}" />
		<delete dir="${build.dir}" />
	</target>

	<target name="init">
		<!-- create the necessary folders -->
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/WEB-INF" />
		<mkdir dir="${build.dir}/WEB-INF/classes" />
		<mkdir dir="${build.dir}/WEB-INF/lib" />
		<filterset id="properties.filterset">
			<filter token="FILE_REPOSITORY_DIR" value="${file.repository.dir}" />
			<filter token="ADMIN_EMAIL" value="${admin.email}" />
			<filter token="ONLINE_HELP_URL" value="${online.help.url}"/>
			<filter token="USE_LDAP" value="${ldap.authentication.enabled}"/>
		</filterset>
	</target>

	<target name="compile" depends="init">
		<echo message="*****************************************************" />
		<echo message="**   Compiling Java Classes ...          		  **" />
		<echo message="*****************************************************" />
		<path id="classpath">
			<fileset refid="compiletime.dependency.fileset" />
			<fileset dir="${common.dir}/lib">
				<include name="**/sdk/*.jar" />
				<exclude name="**/maven-ant-tasks-*.jar" />
				<exclude name="**/ant-contrib-*.jar" />
			</fileset>
		</path>
		<javac srcdir="${src.dir}" destdir="${build.dir}/WEB-INF/classes" debug="true">
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="war" depends="clean, compile">
		<!--copy properties files -->
		<copy todir="${build.dir}/WEB-INF/classes">
			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
				<exclude name="caNanoLab.properties" />
			</fileset>
		</copy>

		<copy overwrite="true" tofile="${build.dir}/WEB-INF/classes/caNanoLab.properties" file="${src.dir}/caNanoLab.properties.template">
			<!-- replace tokens with values from build properties -->
			<filterset refid="properties.filterset" />
		</copy>

		<!-- copy web files and lib files -->
		<copy todir="${build.dir}">
			<fileset dir="${webroot.dir}">
				<exclude name="**/*.mex" />
				<exclude name="**/WEB-INF/classes/**" />
			</fileset>
		</copy>

		<!--copy xml files -->
		<copy todir="${build.dir}/WEB-INF/classes">
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		
		<!-- modify ehcache directory -->
		<replace file="${build.dir}/WEB-INF/classes/ehcache.xml" token="java.io.tmpdir" value="${ehcache.path}" />			

		<!-- copy dependency jars to WEB-INF/lib files  -->
		<copy todir="${build.dir}/WEB-INF/lib">
			<fileset refid="runtime.dependency.fileset" />
			<mapper classpathref="maven-ant-tasks.classpath" type="flatten" />
		</copy>

		<!-- copy jars from common/lib -->
		<copy todir="${build.dir}/WEB-INF/lib">
			<fileset dir="${common.dir}/lib/sdk">
				<include name="**/*.jar" />
			</fileset>
		</copy>

		<!-- tag footer with release version and build tag -->
		<property name="build_tag" value="trunk" />
		<propertyregex override="true" property="build_tag" input="${build.tag}" regexp="\$HeadURL\: .*/cananolab/tags/([^/]*)/.*" select="\1" />
		<replaceregexp file="${build.dir}/html/nciFooter.html" match="\{CANANOLAB_RELEASE_VERSION\}" replace="${release.version}" flags="g" />
		<replaceregexp file="${build.dir}/html/nciFooter.html" match="\{CANANOLAB_BUILD_TAG\}" replace="${build_tag}" flags="g" />

		<!-- package WAR file -->
		<jar destfile="${dist.dir}/caNanoLab.war" basedir="${build.dir}" />
	</target>

	<target name="dist" depends="war">
		<!-- copy database jdbc driver from maven repository-->
		<copy todir="${common.dist.dir}" overwrite="true">
			<restrict>
				<fileset refid="compiletime.dependency.fileset" />
				<!--  **/mysql-connector-java-*.jar didn't work, but **\mysql-connector-java-*.jar works-->
				<rsel:name name="**mysql-connector-java-*.jar" />
			</restrict>
			<mapper classpathref="maven-ant-tasks.classpath" type="flatten" />
		</copy>

		<!--copy mysql-ds.xml and replace database connection info-->
		<copy overwrite="true" tofile="${common.dist.dir}/mysql-ds.xml" file="${common.dir}/resources/jboss-conf/mysql-ds.xml">
			<!-- replace tokens with values from build properties -->
			<filterset id="db.filterset">
				<filter token="database.url" value="${database.url}" />
				<filter token="database.user" value="${database.user}" />
				<filter token="database.password" value="${database.password}" />
			</filterset>
		</copy>
		<if>
			<!--if use LDAP authentication, replace ldap tokens from build properties -->
			<equals arg1="${ldap.authentication.enabled}" arg2="true" />
			<then>
				<echo message="Using LDAP authenication" />
				<copy overwrite="true" tofile="${common.dist.dir}/login-config.xml" file="${common.dir}/resources/jboss-conf/login-config-ldap.xml">
					<filterset>
						<filter token="ldap.host.url" value="${ldap.host.url}" />
						<filter token="ldap.searchable.base" value="${ldap.searchable.base}" />
						<filter token="ldap.userId.label" value="${ldap.userId.label}" />
					</filterset>
				</copy>
			</then>
			<!--if use database authentication, replace database tokens from build properties -->
			<else>
				<copy overwrite="true" tofile="${common.dist.dir}/login-config.xml" file="${common.dir}/resources/jboss-conf/login-config-db.xml">
					<!-- replace tokens with values from build properties -->
					<filterset refid="db.filterset" />
				</copy>
			</else>
		</if>
		<!-- the following is UPT specific -->
		<!-- copy UPT required config files -->
		<copy overwrite="true" tofile="${common.dist.dir}/ApplicationSecurityConfig.xml" file="${common.dir}/resources/jboss-conf/ApplicationSecurityConfig.xml">
			<!-- replace tokens with values from build properties -->
			<filterset>
				<filter token="jboss.server.dir" value="${jboss.server.dir}" />
			</filterset>
		</copy>
		<copy overwrite="true" tofile="${common.dist.dir}/properties-service.xml" file="${common.dir}/resources/jboss-conf/properties-service.xml">
			<!-- replace tokens with values from build properties -->
			<filterset>
				<filter token="jboss.server.dir" value="${jboss.server.dir}" />
			</filterset>
		</copy>
		<copy overwrite="true" tofile="${common.dist.dir}/csmupt.csm.new.hibernate.cfg.xml" file="${common.dir}/resources/jboss-conf/csmupt.csm.new.hibernate.cfg.xml" />
		<copy overwrite="true" tofile="${common.dist.dir}/csmupt423.csm.new.hibernate.cfg.xml" file="${common.dir}/resources/jboss-conf/csmupt423.csm.new.hibernate.cfg.xml" />

		<!--copy upt-ds.xml and replace database connection info-->
		<copy overwrite="true" tofile="${common.dist.dir}/upt-ds.xml" file="${common.dir}/resources/jboss-conf/upt-ds.xml">
			<!-- replace tokens with values from build properties -->
			<filterset id="db.filterset">
				<filter token="database.url" value="${database.url}" />
				<filter token="database.user" value="${database.user}" />
				<filter token="database.password" value="${database.password}" />
			</filterset>
		</copy>

		<!--copy uptEAR.ear -->
		<copy overwrite="true" todir="${common.dist.dir}" file="${common.dir}/resources/security/uptEAR.ear" />
		
		<copy overwrite="true" todir="${common.dist.dir}" file="${common.dir}/resources/help/wikihelp.properties" />
	</target>

	<target name="deploy" depends="dist">
		<!-- deploy WAR and xml to JBOSS deploy location-->
		<copy todir="${jboss.deploy.dir}" overwrite="true">
			<fileset dir="${common.dist.dir}">
				<include name="uptEAR.ear" />
				<include name="upt-ds.xml" />
				<include name="${database.type}-ds.xml" />
				<include name="properties-service.xml"/>
			</fileset>
			<fileset dir="${dist.dir}">
				<include name="caNanoLab.war" />				
			</fileset>
		</copy>
		<copy todir="${jboss.conf.dir}" overwrite="true" file="${common.dist.dir}/login-config.xml" />
		<copy todir="${jboss.conf.dir}/csmconfig" overwrite="true" file="${common.dist.dir}/ApplicationSecurityConfig.xml"/>
		<copy todir="${jboss.conf.dir}/csmconfig" overwrite="true" file="${common.dist.dir}/csmupt.csm.new.hibernate.cfg.xml"/>
		<copy todir="${jboss.conf.dir}/csmconfig" overwrite="true" file="${common.dist.dir}/csmupt423.csm.new.hibernate.cfg.xml"/>
			
		<copy todir="${jboss.lib.dir}" overwrite="true">
			<fileset dir="${common.dist.dir}">
				<include name="mysql-connector-java*.jar" />
			</fileset>
		</copy>
	</target>
	
	<target name="deploy_local" depends="dist">
		<copy todir="${jboss.deploy.dir}" overwrite="true">
			<fileset dir="${dist.dir}">
				<include name="caNanoLab.war" />				
			</fileset>
		</copy>
	</target>	

	<target name="jar:helpers" depends="compile">
		<!-- caNanoLab.properties -->
		<copy overwrite="true" tofile="${build.dir}/WEB-INF/classes/caNanoLab.properties" file="${src.dir}/caNanoLab.properties.template">
			<!-- replace tokens with values from build properties -->
			<filterset refid="properties.filterset" />
		</copy>
		<!-- package jar file -->
		<jar destfile="${dist.dir}/caNanoLab-helpers.jar" basedir="${build.dir}/WEB-INF/classes" includes="**/AccessibilityBean.class, **/UserBean.class, **/*Exception.class, **/SecurityService.class, **/*Helper*.class, **/ClassUtils.class, **/StringUtils.class, **/TextMatchMode.class, **/Constants.class, **/PropertyUtils.class, caNanoLab.properties.template" excludes="**/AdvancedSampleServiceHelper.class" />
	</target>

	<target name="jar:orm">
		<!-- package jar file -->
		<jar destfile="${dist.dir}/caNanoLabSDK-orm.jar" basedir="${src.dir}" includes="**/*hbm.xml, ehcache.xml, hibernate.cfg.xml" />
	</target>
</project>
